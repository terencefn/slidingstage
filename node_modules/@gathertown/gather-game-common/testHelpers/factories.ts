/**
 * Uses Fishery (https://github.com/thoughtbot/fishery) to build factories, similar to Rails factory_bot.
 * Test object factories are ideal ways to create typed, complete test objects that allow the test to
 * focus on the bits of data that actually matter, and none of the extra. Further discussion here:
 * https://thoughtbot.com/blog/announcing-fishery-a-javascript-and-typescript-factory-library
 *
 * We might want to consider breaking out into separate files, following a structure of:
 *
 *     testHelpers/factories/index.ts  (imports all siblings)
 *     testHelpers/factories/*.ts      (one per logical domain model)
 *
 * But let's keep it simple and in a single file for now, and evolve that later.
 */

import { Factory } from "fishery";
import { Player, generateDefaultPlayer } from "../src/Player";

/**
 * Add new factories here! Follow this pattern: https://github.com/thoughtbot/fishery#define-factories.
 * Then export them at the bottom of the file. Naming convention is mockSomeModel.
 */

const mockPlayer = Factory.define<Player, { id?: string }>(({ sequence, transientParams }) => {
  const playerId = transientParams.id || sequence;
  return {
    ...generateDefaultPlayer(),
    name: `player ${playerId}`,
    x: 1,
    y: 1,
  };
});

export const factories = {
  player: mockPlayer,
};
